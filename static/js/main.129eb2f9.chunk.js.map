{"version":3,"sources":["components/Button.tsx","services/firebase.ts","contexts/AuthContext.tsx","hooks/useAuth.ts","images/illustration.svg","images/google-icon.svg","pages/Home.tsx","pages/NewRoom.tsx","components/QuestionCard.tsx","images/copy.svg","components/RoomCode.tsx","hooks/useRoom.ts","pages/Room.tsx","images/delete.svg","images/check.svg","images/answer.svg","pages/AdminRoom.tsx","App.tsx","index.tsx"],"names":["Button","props","className","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","AuthContext","createContext","AuthContextProvider","useState","user","setUser","a","provider","GoogleAuthProvider","signInWithPopup","result","displayName","photoURL","uid","Error","id","name","avatar","useEffect","unsubscribe","onAuthStateChanged","Provider","value","signInWithGoogle","children","useAuth","useContext","Home","history","useHistory","roomId","setRoomId","push","event","preventDefault","trim","ref","get","roomRef","exists","alert","val","endedAt","src","illustrationImg","alt","onClick","googleLogo","onSubmit","onChange","target","type","placeholder","NewRoom","newRoom","setNewRoom","title","authorId","firebaseRoom","key","to","QuestionCard","author","isAnswered","isHighLighted","content","RoomCode","navigator","clipboard","writeText","code","copyImg","useRoom","questionsList","setQuestionsList","roomTitle","setRoomTitle","on","room","databaseRoom","firebaseQuestions","questions","questionsArray","Object","entries","map","likeCount","values","likes","length","likeId","find","off","Room","question","setQuestion","useParams","e","newQuestion","questionId","remove","disabled","handleLikeQuestion","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","AdminRoom","window","confirm","update","Date","transaction","handleSetQuestionAsAnswered","checkIcon","handleHighLightedQuestion","answerIcon","handleDeleteQuestion","deleteIcon","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.129eb2f9.chunk.js","sourcesContent":["import { ButtonHTMLAttributes } from 'react';\n\nimport '../styles/button.scss';\n\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement>\n\nexport function Button(props:ButtonProps) {\n  return (\n    <button className=\"button\" {...props}/>\n  )\n}\n","import firebase from 'firebase/app';\n\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst auth = firebase.auth();\nconst database = firebase.database();\n\nexport { firebase, auth, database }\n","import { auth, firebase } from '../services/firebase';\nimport { createContext, useState, useEffect, ReactNode } from 'react';\n\ntype User = {\n  id: string;\n  name: string;\n  avatar: string;\n}\n\ntype AuthContextType = {\n  user: User | undefined;\n  signInWithGoogle: () => Promise<void>;\n};\n\ntype AuthContextProviderProps = {\n  children: ReactNode;\n};\n\nexport const AuthContext = createContext({} as AuthContextType);\n\nexport function AuthContextProvider(props: AuthContextProviderProps) {\n\n  const [user, setUser] = useState<User>();\n\n  // usando o array vazio a função dentro do useEffect vai ser disparada apenas uma vez quando o componente for montado\n  useEffect(() => {\n\n    //O metodo onAuthStateChanged retorna um firebase.Unsubscribe que é a função q retira o listener\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        const { displayName, photoURL, uid } = user;\n  \n  \n        if (!displayName || !photoURL) {\n          throw new Error('Mising information from Google Account');\n        }\n  \n        setUser({\n          id: uid,\n          name: displayName,\n          avatar: photoURL,\n        });\n      }\n    });\n\n    //retornar o metodo do firebase.unsubscribe para retirar o evento na hora da desmontagem\n    return () => {\n      unsubscribe();\n    }\n  }, []);\n  \n  async function signInWithGoogle() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n  \n    const result = await auth.signInWithPopup(provider)\n  \n    if (result.user) {\n      const { displayName, photoURL, uid } = result.user;\n  \n  \n      if (!displayName || !photoURL) {\n        throw new Error('Mising information from Google Account');\n      }\n  \n      setUser({\n        id: uid,\n        name: displayName,\n        avatar: photoURL,\n      });\n    }\n  }\n\n  return (\n    <AuthContext.Provider value={{ user, signInWithGoogle }}>\n      {props.children}\n    </AuthContext.Provider>\n  )\n}\n","import { useContext } from 'react';\nimport { AuthContext } from '../contexts/AuthContext';\n\nexport function useAuth() {\n  const value = useContext(AuthContext);\n  return value;\n}\n","export default __webpack_public_path__ + \"static/media/illustration.ae7276f0.svg\";","export default __webpack_public_path__ + \"static/media/google-icon.df15d8e5.svg\";","import { FormEvent } from 'react';\nimport { Button } from '../components/Button';\nimport { useHistory } from 'react-router-dom'\nimport { useAuth } from '../hooks/useAuth';\nimport illustrationImg from '../images/illustration.svg';\nimport googleLogo from '../images/google-icon.svg'\nimport '../styles/auth.scss';\nimport { useState } from 'react';\nimport { database } from '../services/firebase';\n\n\nexport function Home() {\n  const history = useHistory();\n  const { user, signInWithGoogle } = useAuth();\n  const [roomId, setRoomId] = useState('');\n\n  async function handleCreateRoom() {\n    if (!user) {\n      await signInWithGoogle();\n    }\n    history.push('/room/new');\n  }\n\n  async function handleJoinRoom(event:FormEvent) {\n    event.preventDefault();\n\n    if(roomId.trim() === '') {\n      return;\n    }\n\n    const roomRef = await database.ref(`rooms/${roomId}`).get();\n\n    if (!roomRef.exists()) {\n      alert('Esta sala não existe.');\n      return;\n    }\n\n    if (roomRef.val().endedAt) {\n      alert('Esta sala foi encerrada.');\n      return;\n    }\n\n    history.push(`/rooms/${roomId}`)\n\n  }\n\n  return (\n    <div id=\"auth-page\">\n      <aside>\n        <img src={illustrationImg} alt=\"Ilustração de perguntas e respostas\" />\n        <strong>Faça sua pergunta</strong>\n        <p>Tire suas dúvidas em tempo real</p>\n      </aside>\n      <main>\n        <div className=\"main-content\">\n          <button\n            className=\"btn-create-room\"\n            onClick={handleCreateRoom}\n          >\n            <img src={googleLogo} alt=\"Google Logo\" />\n            Entre com o google\n          </button>\n          <div className=\"separator\">Ou entre em uma sala</div>\n          <form onSubmit={handleJoinRoom}>\n            <input\n              onChange={({ target }) => setRoomId(target.value)}\n              value={roomId}\n              type=\"text\"\n              placeholder=\"Digite o código da sala\"\n            />\n            <Button type=\"submit\">\n              Entrar na sala!\n            </Button>\n          </form>\n        </div>\n      </main>\n    </div>\n  )\n}","import { FormEvent, useState } from 'react';\nimport { Button } from '../components/Button';\nimport { Link, useHistory } from 'react-router-dom'\nimport illustrationImg from '../images/illustration.svg';\nimport { database } from '../services/firebase';\nimport { useAuth } from '../hooks/useAuth';\n\nexport function NewRoom() {\n  const { user } = useAuth();\n  const history = useHistory();\n\n  const [newRoom, setNewRoom] = useState('');\n\n  async function handleCreateRoom(event: FormEvent) {\n    event.preventDefault();\n\n    if (newRoom.trim() === '') {\n      return;\n    }\n\n    const roomRef = database.ref('rooms');\n\n    const firebaseRoom = await roomRef.push({\n      title: newRoom,\n      authorId: user?.id,\n    });\n\n    history.push(`/admin/rooms/${firebaseRoom.key}`);\n\n\n  }\n\n  return (\n    <div id=\"auth-page\">\n      <aside>\n        <img src={illustrationImg} alt=\"Ilustração de perguntas e respostas\" />\n        <strong>Faça sua pergunta</strong>\n        <p>Tire suas dúvidas em tempo real</p>\n      </aside>\n      <main>\n        <div className=\"main-content\">\n          <h2>Crie uma nova sala</h2>\n          <form onSubmit={handleCreateRoom}>\n            <input\n              onChange={({ target }) => setNewRoom(target.value)}\n              value={newRoom}\n              type=\"text\"\n              placeholder=\"Código da sala\"\n            />\n            <Button type=\"submit\">\n              Criar sala\n            </Button>\n          </form>\n          <p>Quer entrar em uma sala existente? <Link to=\"/mepergunte\">Clique aqui</Link></p>\n        </div>\n      </main>\n    </div >\n  )\n}","import '../styles/questionCard.scss';\nimport { ReactNode } from 'react';\n\ntype Question = {\n  author: {\n    name: string,\n    avatar: string,\n  },\n  content: string,\n  isHighLighted: boolean,\n  isAnswered: boolean,\n  children?: ReactNode,\n}\n\nexport function QuestionCard({ author, isAnswered, isHighLighted, children, content}: Question) {\n  return (\n    <div className={`question-card-container\n      ${isHighLighted && !isAnswered ? 'highLighted' : ''}\n      ${isAnswered ? 'answered' : ''}`}\n    >\n      <p>{content}</p>\n      <div className=\"user-info\">\n        <div className=\"left-content\">\n          <img src={author.avatar} alt={author.name} />\n          <span>{author.name}</span>\n        </div>\n        <div className=\"right-content\">\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}","export default __webpack_public_path__ + \"static/media/copy.2f36f99e.svg\";","import copyImg from '../images/copy.svg';\nimport '../styles/roomCode.scss';\n\ntype RoomCodeProps = {\n  code: string;\n}\n\nexport function RoomCode(props: RoomCodeProps) {\n\n  function copyRoomCodeToClipboard() {\n    navigator.clipboard.writeText(props.code)\n  }\n  return (\n    <button onClick={copyRoomCodeToClipboard} className=\"room-code\">\n      <div>\n        <img src={copyImg} alt=\"copy\" />\n      </div>\n      <span>{`Sala ${props.code}`}</span>\n    </button>\n  );\n}","import { useState, useEffect } from 'react';\nimport { database } from '../services/firebase';\nimport { useAuth } from './useAuth';\n\ntype Question = {\n  id: string,\n  author: {\n    name: string,\n    avatar: string,\n  },\n  content: string,\n  isHighLighted: boolean,\n  isAnswered: boolean,\n  likeCount: number,\n  likeId: string | undefined,\n}\n\ntype FirebaseQuestions = Record<string, {\n  author: {\n    name: string,\n    avatar: string,\n  },\n  content: string,\n  isHighLighted: boolean,\n  isAnswered: boolean,\n  likes: Record<string, {\n    authorId: string,\n  }>\n}>;\n\nexport function useRoom(roomId: string) {\n  const [questionsList, setQuestionsList] = useState<Question[]>([]);\n  const [roomTitle, setRoomTitle] = useState('');\n  const { user } = useAuth();\n\n  useEffect(() => {\n    const roomRef = database.ref(`rooms/${roomId}`);\n\n    roomRef.on('value', room => {\n      const databaseRoom = room.val();\n      const firebaseQuestions: FirebaseQuestions = databaseRoom.questions || {};\n      const questionsArray = Object.entries(firebaseQuestions).map(([key, value]) => {\n        return {\n          id: key,\n          content: value.content,\n          author: value.author,\n          isHighLighted: value.isHighLighted,\n          isAnswered: value.isAnswered,\n          likeCount: Object.values(value.likes || {}).length,\n          likeId: Object.entries(value.likes || {}).find(([key, value]) => value.authorId === user?.id)?.[0],\n        }\n      });\n      setQuestionsList(questionsArray);\n      setRoomTitle(databaseRoom.title);\n    });\n\n    return () => {\n      roomRef.off('value');\n    }\n  }, [roomId, user?.id]);\n  return {\n    questionsList,\n    roomTitle,\n  };\n}","import { FormEvent, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Button } from \"../components/Button\";\nimport { QuestionCard } from '../components/QuestionCard';\nimport { RoomCode } from '../components/RoomCode';\nimport { useAuth } from \"../hooks/useAuth\";\nimport { database } from \"../services/firebase\";\nimport { useRoom } from '../hooks/useRoom';\nimport '../styles/room.scss';\n\ntype RoomParams = {\n  id: string;\n}\n\n\nexport function Room() {\n  const [question, setQuestion] = useState('');\n  const { user } = useAuth();\n  const params = useParams<RoomParams>();\n  const roomId = params.id;\n  const { questionsList, roomTitle } = useRoom(roomId);\n\n  async function handleSendQuestion(e: FormEvent) {\n    e.preventDefault();\n\n    if (question.trim() === '') {\n      return;\n    }\n\n    if (!user) {\n      throw new Error('You must be logged in')\n    }\n\n    const newQuestion = {\n      content: question,\n      author: {\n        name: user.name,\n        avatar: user.avatar,\n      },\n      isHighLighted: false,\n      isAnswered: false,\n    }\n\n    await database.ref(`rooms/${roomId}/questions`).push(newQuestion);\n    setQuestion('');\n  }\n\n  async function handleLikeQuestion(questionId: string, likeId: string | undefined) {\n    if(likeId) {\n      await database.ref(`rooms/${roomId}/questions/${questionId}/likes/${likeId}`).remove();\n      // await database.ref(`rooms/${roomId}/questions/${questionId}/likes/likesCount`)\n      // .transaction((value) => value - 1);\n    } else {\n      await database.ref(`rooms/${roomId}/questions/${questionId}/likes`).push({\n        authorId: user?.id,\n      });\n      // await database.ref(`rooms/${roomId}/questions/${questionId}/likes/likesCount`)\n      // .transaction((value) => value + 1);\n    }\n  }\n\n  return (\n    <div id=\"room-page\">\n      <header>\n        <p>LOGO</p>\n        <div>\n          <RoomCode code={roomId} />\n        </div>\n      </header>\n      <main className=\"content\">\n        <div className=\"room-title\">\n          <h1>{roomTitle}</h1>\n          {questionsList.length > 0 && <span>{`${questionsList.length} pergunta(s)`}</span>}\n        </div>\n        <form onSubmit={handleSendQuestion}>\n          <textarea\n            onChange={({ target }) => setQuestion(target.value)}\n            placeholder=\"Pergunte\"\n            value={question}\n          />\n          <div className=\"form-footer\">\n            {user ? (\n              <div className=\"user-info\">\n                <img src={user.avatar} alt={user.name} />\n                <span>{user.name}</span>\n              </div>\n            ) : (\n              <span>Para enviar sua pergunta,<button className=\"btn-login\" > faça seu login.</button></span>\n            )}\n            <Button disabled={!user} type=\"submit\">Enviar sua pergunta</Button>\n          </div>\n        </form>\n        {questionsList.map((question) => (\n          <QuestionCard\n            key={question.id}\n            {...question}\n          >\n           { !question.isAnswered && (\n              <button\n              className={`like-button ${question.likeId ? 'liked' : '' }`}\n              type=\"button\"\n              onClick={() => handleLikeQuestion(question.id, question.likeId)}\n            >\n              {question.likeCount > 0 && <span>{question.likeCount}</span>}\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M7 22H4C3.46957 22 2.96086 21.7893 2.58579 21.4142C2.21071 21.0391 2 20.5304 2 20V13C2 12.4696 2.21071 11.9609 2.58579 11.5858C2.96086 11.2107 3.46957 11 4 11H7M14 9V5C14 4.20435 13.6839 3.44129 13.1213 2.87868C12.5587 2.31607 11.7956 2 11 2L7 11V22H18.28C18.7623 22.0055 19.2304 21.8364 19.5979 21.524C19.9654 21.2116 20.2077 20.7769 20.28 20.3L21.66 11.3C21.7035 11.0134 21.6842 10.7207 21.6033 10.4423C21.5225 10.1638 21.3821 9.90629 21.1919 9.68751C21.0016 9.46873 20.7661 9.29393 20.5016 9.17522C20.2371 9.0565 19.9499 8.99672 19.66 9H14Z\" stroke=\"#737380\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n              </svg>\n            </button>\n           ) }\n          </QuestionCard>\n        ))}\n      </main>\n    </div>\n  );\n}","export default __webpack_public_path__ + \"static/media/delete.22ba6e00.svg\";","export default __webpack_public_path__ + \"static/media/check.5dfa6ed6.svg\";","export default __webpack_public_path__ + \"static/media/answer.4502a8d5.svg\";","import { useParams } from \"react-router-dom\";\nimport { Button } from \"../components/Button\";\nimport { QuestionCard } from '../components/QuestionCard';\nimport { RoomCode } from '../components/RoomCode';\n// import { useAuth } from \"../hooks/useAuth\";\nimport { useRoom } from '../hooks/useRoom';\nimport '../styles/room.scss';\nimport deleteIcon from '../images/delete.svg';\nimport checkIcon from '../images/check.svg'\nimport answerIcon from '../images/answer.svg'\nimport { database } from \"../services/firebase\";\nimport { useHistory } from 'react-router-dom';\n\ntype RoomParams = {\n  id: string;\n}\n\n\nexport function AdminRoom() {\n  // const { user } = useAuth();\n  const history = useHistory();\n  const params = useParams<RoomParams>();\n  const roomId = params.id;\n  const { questionsList, roomTitle } = useRoom(roomId);\n\n  async function handleDeleteQuestion(id: string) {\n    if (window.confirm('Deseja excluir a pergunta?')) {\n      await database.ref(`rooms/${roomId}/questions/${id}`).remove();\n    }\n  }\n\n  async function handleDeleteRoom() {\n    if (window.confirm(\"Deseja excluir a sala?\")) {\n      await database.ref(`rooms/${roomId}`).update({\n        endedAt: new Date(),\n      });\n      history.push('/mepergunte');\n    }\n  }\n\n  async function handleHighLightedQuestion(id: string) {\n    await database\n      .ref(`rooms/${roomId}/questions/${id}/isHighLighted`)\n      .transaction((value) => !value);\n  }\n\n  async function handleSetQuestionAsAnswered(id: string) {\n    await database.ref(`rooms/${roomId}/questions/${id}`).update({\n      isAnswered: true,\n    });\n    // await database.ref(`rooms/${roomId}/questions/`).orderByChild('/isAnswered');\n  }\n\n  return (\n    <div id=\"room-page\">\n      <header>\n        <p>LOGO</p>\n        <div>\n          <RoomCode code={roomId} />\n          <Button onClick={handleDeleteRoom}>Encerrar Sala</Button>\n        </div>\n      </header>\n      <main className=\"content\">\n        <div className=\"room-title\">\n          <h1>{roomTitle}</h1>\n          {questionsList.length > 0 && <span>{`${questionsList.length} pergunta(s)`}</span>}\n        </div>\n        {questionsList.map((question) => (\n          <QuestionCard\n            key={question.id}\n            {...question}\n          >\n            {!question.isAnswered && (\n              <>\n                <button\n                  className=\"check-button\"\n                  type=\"button\"\n                  onClick={() => handleSetQuestionAsAnswered(question.id)}\n                >\n                  <img src={checkIcon} alt=\"Check icon\" />\n                </button>\n                <button\n                  className=\"answer-button\"\n                  type=\"button\"\n                  onClick={() => handleHighLightedQuestion(question.id)}\n                >\n                  <img src={answerIcon} alt=\"Answer icon\" />\n                </button>\n              </>\n            )}\n            <button\n              className=\"delete-button\"\n              type=\"button\"\n              onClick={() => handleDeleteQuestion(question.id)}\n            >\n              <img src={deleteIcon} alt=\"Delete icon\" />\n            </button>\n          </QuestionCard>\n        ))}\n      </main>\n    </div>\n  );\n}","import { Home } from './pages/Home';\nimport { NewRoom } from './pages/NewRoom';\nimport { Room } from './pages/Room';\nimport { AdminRoom } from './pages/AdminRoom';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\nimport { AuthContextProvider } from './contexts/AuthContext';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <AuthContextProvider>\n          <Route exact path=\"/mepergunte\" component={Home} />\n          <Route exact path=\"/room/new\" component={NewRoom} />\n          <Route exact path=\"/rooms/:id\" component={Room} />\n          <Route exact path=\"/admin/rooms/:id\" component={AdminRoom} />\n        </AuthContextProvider>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './services/firebase';\n\nimport './styles/global.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}